@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/CSS/home_Index.css" rel="stylesheet" />
 

<div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
    <!-- Indicators -->
    <ol class="carousel-indicators  mydot display-inblock">
        <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
        <li data-target="#carousel-example-generic" data-slide-to="1"></li>
        <li data-target="#carousel-example-generic" data-slide-to="2"></li>
        <li data-target="#carousel-example-generic" data-slide-to="3"></li>
    </ol>
    <!-- Wrapper for slides -->
    <div class="carousel-inner">
        <div class="item active ">
            <img src="~/Content/Photos/book1.jpg" />
            @*    <div class="carousel-caption">
                    first
                </div>*@
        </div>
        <div class="item ">
            <img src="~/Content/Photos/book2.jpg" />
        </div>
        <div class="item ">
            <img src="~/Content/Photos/book3.jpg" />
        </div>
        <div class="item ">
            <img src="~/Content/Photos/book4.jpg" />
        </div>
    </div>
    <!-- Controls -->
    <a class="left carousel-control" href="#carousel-example-generic" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left"></span>
    </a>
    <a class="right carousel-control" href="#carousel-example-generic" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right"></span>
    </a>
</div>



<div class="container" >
    <div class="tit bluet">
        Portal.MVC 简介
    </div>
    <div class="article-post">
        项目是基于MVC4+EF,带有角色，权限，用户中心及账户相关(登录,注册,修改密码，找回密码等)等基本功能。参考的开源项目
        <a target="_blank" href="http://www.nopcommerce.com/">nopcommerce</a>，这是一个电商架构的MVC项目，我对其进行了简化，之前主要是方便我自己搭建一些小的网站。
        我没有分太多的层级，核心的部分在<strong>Niqiu.Core</strong>类库里面.分四个部分
        <ul>
            <li><strong>Domain:</strong>包含主要的领域模型,比如User,UserRole,PermissionRecord等</li>
            <li><strong>Helpers:</strong>包含一些帮助类，比如xml，email</li>
            <li><strong>Mapping:</strong>数据映射</li>
            <li><strong>Services:</strong>服务部分的接口和实现</li>
        </ul>
        <p>而网站部分重要的有一些可以复用的Attributes,AccountController等，下面介绍下2个我认为重要点的部分</p>
        <h3>Ninject依赖注入:</h3>
        <p>
            Nop中使用的是<a href="http://autofac.org/">Autofac</a>，并构建了一个强大的<strong>EnginContext</strong>管理所有的依赖注入项，在这个项目中我拿掉了这一部分，换成<a target="_blank" href="http://www.ninject.org/">Ninject</a>来完成IOC的工作。并不涉及这两个组件的优劣问题，而且我认为前者的功能更要
            强悍一些。Ninject是在<strong>NinjectWebCommon</strong>类中注册的.它在App_Start文件夹下。 
            如下：
            <pre>
                <code>
      kernel.Bind&lt;IPermissionservice&gt;().To&lt;Permissionservice&gt;();
</code>
</pre>
        </p>
        <h3>权限管理:</h3>
        <p>默认设定了三种角色，Administrators，Admins，Employeer，他们分别配置了不同的权限，权限指定是在<strong>StandardPermissionProvider</strong>这个类中完成的，表示一个角色拥有哪些权限,Administrators拥有所有权限。
            <pre>
  <code>
     new DefaultPermissionRecord
      {
        UserRoleSystemName   = SystemUserRoleNames.Admin,
        PermissionRecords = new []
         {
            AccessAdminPanel,
            SearchOrder,
            ManageUsers,
          }
       },
     </code>
</pre>
            而权限验证的时候，在响应的Action上面加上AdminAuthorize和权限名称即可。
            <pre>
<code>
        <strong>[AdminAuthorize("ManageUsers")]</strong>
        public ActionResult Index()
        {
        }
</code>
</pre>
            后台只有给用户设置角色的页面，我没做新增角色并分配权限的页面。不过这个实现起来也很简单了。如有其它的问题可以看我的<a href="http://www.cnblogs.com/stoneniqiu/">博客</a>，或者联系我。
        </p>
    </div>
    <div class="tit bluet">
       关于分享
    </div>
    <div class="article-post">
        首先还是希望这个工程对大家有帮助，说的好听是为社区做一些贡献，但分享的知识的主要目的还是在于为我自己，分享的过程是对过去知识一个梳理，并存档入库，这种感觉就像是盛了一杯水倒掉了，进而我需要找新的水装满这个水杯。
    </div>
     

    </div>
